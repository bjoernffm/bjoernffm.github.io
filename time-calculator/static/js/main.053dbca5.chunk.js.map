{"version":3,"sources":["reducers/times.js","actions/actions.js","reducers/index.js","components/Jumbotron.js","components/TableRow.js","components/Table.js","components/TimeTable.js","components/Input.js","components/TotalCard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","times","state","action","type","previousHours","previousMinutes","length","total","hours","minutes","payload","Math","floor","parseInt","index","newState","splice","sumHours","sumMinutes","map","item","combineReducers","Jumbotron","title","subtitle","className","TableRow","onClick","hoursFormatted","padStart","minutesFormatted","totalHoursFormatted","totalMinutesFormatted","align","style","marginTop","Table","onRemoveClick","width","cellSpacing","time","key","TimeTable","connect","ownProps","dispatch","removeTime","Input","props","hoursInput","React","createRef","minutesInput","onSubmit","bind","onKeyDownHours","onKeyDownMinutes","hourInput","minuteInput","this","current","focus","e","preventDefault","isNaN","value","addTime","setState","indexOf","substr","placeholder","ref","onKeyDown","Component","Footer","Date","getFullYear","store","createStore","timeApp","App","id","maxWidth","paddingTop","paddingBottom","TotalCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.053dbca5.chunk.js","sourcesContent":["import {\r\n    ADD_TIME,\r\n    REMOVE_TIME\r\n} from '../actions/actions';\r\n\r\nconst initialState = [];\r\n\r\nfunction times(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_TIME:\r\n            let previousHours = 0;\r\n            let previousMinutes = 0;\r\n\r\n            if (state.length > 0) {\r\n                previousHours = state[state.length-1].total.hours;\r\n                previousMinutes = state[state.length-1].total.minutes;\r\n            }\r\n\r\n            let minutes = ((previousHours+action.payload.hours)*60) + (previousMinutes+action.payload.minutes);\r\n            let hours = Math.floor(minutes/60);\r\n            minutes = minutes % 60;\r\n\r\n            return [\r\n                ...state,\r\n                {\r\n                    hours: action.payload.hours,\r\n                    minutes: action.payload.minutes,\r\n                    total: {\r\n                        hours,\r\n                        minutes\r\n                    }\r\n                }\r\n            ];\r\n        case REMOVE_TIME:\r\n            if (state.length < 1 ||  typeof state[parseInt(action.payload.index)] === \"undefined\") {\r\n                return state;\r\n            }\r\n\r\n            let newState = [...state];\r\n            newState.splice(action.payload.index, 1);\r\n\r\n            if (parseInt(action.payload.index) === state.length-1) {\r\n                return newState;\r\n            }\r\n\r\n            let sumHours = 0;\r\n            let sumMinutes = 0;\r\n            newState = newState.map((item) => {\r\n                let minutes = ((sumHours+item.hours)*60) + (sumMinutes+item.minutes);\r\n                sumHours = Math.floor(minutes/60);\r\n                sumMinutes = minutes % 60;\r\n\r\n                return {\r\n                    hours: item.hours,\r\n                    minutes: item.minutes,\r\n                    total: {\r\n                        hours: sumHours,\r\n                        minutes: sumMinutes\r\n                    }\r\n                };\r\n            });\r\n\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default times;","/*\r\n * action types\r\n */\r\n\r\nexport const ADD_TIME = 'ADD_TIME';\r\nexport const REMOVE_TIME = 'REMOVE_TIME';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function addTime(hours, minutes) {\r\n    return {\r\n        type: ADD_TIME,\r\n        payload: {\r\n            hours,\r\n            minutes\r\n        }\r\n    };\r\n}\r\n\r\nexport function removeTime(index) {\r\n    return {\r\n        type: REMOVE_TIME,\r\n        payload: {\r\n            index\r\n        }\r\n    };\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport times from './times';\r\n\r\nexport default combineReducers({\r\n    times\r\n})","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Jumbotron = ({title, subtitle}) => {\n    return (<div className=\"jumbotron\">\n                <h1 className=\"display-4\">{title}</h1>\n                <p className=\"lead\">{subtitle}</p>\n            </div>);\n};\n\nJumbotron.propTypes = {\n    title: PropTypes.string.isRequired,\n    subtitle: PropTypes.string.isRequired\n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableRow = ({hours, minutes, total, onClick}) => {\n\n    let hoursFormatted = (hours+\"\").padStart(2, '0');\n    let minutesFormatted = (minutes+\"\").padStart(2, '0');\n\n    let totalHoursFormatted = (total.hours+\"\").padStart(2, '0');\n    let totalMinutesFormatted = (total.minutes+\"\").padStart(2, '0');\n\n    return (<tr>\n                <td>{hoursFormatted}:{minutesFormatted}</td>\n                <td>{totalHoursFormatted}:{totalMinutesFormatted}</td>\n                <td align=\"right\">\n                    <button className=\"btn btn-secondary btn-circle btn-sm\" style={{marginTop: \"-3px\"}} onClick={onClick}>\n                        <i className=\"fas fa-trash\"></i>\n                    </button>\n                </td>\n            </tr>);\n};\n\nTableRow.propTypes = {\n    hours: PropTypes.number.isRequired,\n    minutes: PropTypes.number.isRequired\n}\n\nexport default TableRow;\n","import React from 'react';\nimport TableRow from './TableRow';\nimport PropTypes from 'prop-types';\n\nconst Table = ({onRemoveClick, times}) => {\n    return (\n        <div className=\"card shadow mb-4\">\n            <div className=\"card-header py-3\">\n                <h6 className=\"m-0 font-weight-bold text-primary\">Time list</h6>\n            </div>\n            <div className=\"card-body\">\n                <div className=\"table-responsive\">\n                    <table className=\"table\" width=\"100%\" cellSpacing=\"0\">\n                        <thead>\n                            <tr>\n                                <th>Time</th>\n                                <th>Sum</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {times.map((time, index) => (\n                              <TableRow key={index} {...time} onClick={() => onRemoveClick(index) } />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    times: PropTypes.arrayOf(\n        PropTypes.shape({\n            hours: PropTypes.number.isRequired,\n            minutes: PropTypes.number.isRequired\n        }).isRequired\n    ).isRequired,\n    onRemoveClick: PropTypes.func.isRequired\n}\n\nexport default Table;\n","import { connect } from 'react-redux'\n//import { setVisibilityFilter } from '../actions'\nimport Table from '../components/Table';\nimport { removeTime } from '../actions/actions';\n\nconst mapStateToProps = (state, ownProps) => {\n    return state;\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        onRemoveClick: (index) => {\n            dispatch(removeTime(index));\n        }\n    }\n}\n\nconst TimeTable = connect(mapStateToProps, mapDispatchToProps)(Table);\n\nexport default TimeTable","import React from 'react';\n//import PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { addTime } from '../actions/actions';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props); // makes this refer to this component\n\n        this.hoursInput = React.createRef();\n        this.minutesInput = React.createRef();\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onKeyDownHours = this.onKeyDownHours.bind(this);\n        this.onKeyDownMinutes = this.onKeyDownMinutes.bind(this);\n\n        this.state = {\n            hourInput: \"EMPTY\",\n            minuteInput: \"EMPTY\"\n        };\n    }\n\n    componentDidMount() {\n        this.hoursInput.current.focus();\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        let hours = 0;\n        let minutes = 0;\n\n        if (!isNaN(parseInt(this.hoursInput.current.value))) {\n            hours = parseInt(this.hoursInput.current.value);\n        }\n        if (!isNaN(parseInt(this.minutesInput.current.value))) {\n            minutes = parseInt(this.minutesInput.current.value);\n        }\n\n        if (hours !== 0 || minutes !== 0) {\n            this.props.dispatch(addTime(hours, minutes));\n        }\n        this.hoursInput.current.value = '';\n        this.minutesInput.current.value = '';\n        this.hoursInput.current.focus();\n        this.setState({ minuteInput: \"EMPTY\", hourInput: \"EMPTY\" });\n    }\n\n    onKeyDownHours(e) {\n        e.preventDefault();\n\n        if (this.state.hourInput === \"EMPTY\") {\n            if ([\"Backspace\"].indexOf(e.key) !== -1 && this.hoursInput.current.value === \"0\") {\n                this.hoursInput.current.value = \"\";\n                this.setState({ hourInput: \"EMPTY\" });\n            } else if ([\"0\", \"Tab\", \"Enter\"].indexOf(e.key) !== -1) {\n                this.hoursInput.current.value = \"0\";\n                this.minutesInput.current.focus();\n                this.setState({ hourInput: \"EMPTY\" });\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].indexOf(e.key) !== -1) {\n                this.hoursInput.current.value = e.key;\n                this.setState({ hourInput: \"FILLED\" });\n            }\n        } else if (this.state.hourInput === \"FILLED\") {\n            if ([\"Tab\", \"Enter\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.focus();\n            } else if ([\"Backspace\"].indexOf(e.key) !== -1) {\n                if (this.hoursInput.current.value.length > 1) {\n                    this.hoursInput.current.value = this.hoursInput.current.value.substr(0, this.hoursInput.current.value.length-1);\n                } else {\n                    this.hoursInput.current.value = \"\";\n                    this.setState({ hourInput: \"EMPTY\" });\n                }\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"].indexOf(e.key) !== -1) {\n                this.hoursInput.current.value += e.key;\n            }\n        }\n    }\n\n    onKeyDownMinutes(e) {\n        e.preventDefault();\n\n        if (this.state.minuteInput === \"EMPTY\") {\n            if ([\"Backspace\"].indexOf(e.key) !== -1 && this.hoursInput.current.value === \"0\") {\n                this.minutesInput.current.value = \"\";\n                this.setState({ minuteInput: \"EMPTY\" });\n            } else if ([\"0\", \"Enter\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.value = \"0\";\n                this.onSubmit(e);\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.value = e.key;\n                this.setState({ minuteInput: \"FILLED_FIRST\" });\n            } else if ([\"6\", \"7\", \"8\", \"9\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.value = e.key;\n                this.onSubmit(e);\n            }\n        } else if (this.state.minuteInput === \"FILLED_FIRST\") {\n            if ([\"Enter\"].indexOf(e.key) !== -1) {\n                this.onSubmit(e);\n            } else if ([\"Backspace\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.value = \"\";\n                this.setState({ minuteInput: \"EMPTY\" });\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"].indexOf(e.key) !== -1) {\n                this.minutesInput.current.value += e.key;\n                this.setState({ minuteInput: \"FILLED_SECOND\" });\n                this.onSubmit(e);\n            }\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <div className=\"form-row\">\n                    <div className=\"form-group col\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Hours\" ref={this.hoursInput} onKeyDown={this.onKeyDownHours} />\n                    </div>\n                    <div className=\"form-group col\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Minutes\" ref={this.minutesInput} onKeyDown={this.onKeyDownMinutes} />\n                    </div>\n                    <div className=\"form-group col-auto\">\n                        <button className=\"btn btn-success btn-circle btn-sm\" style={{marginTop: \"5px\"}} type=\"submit\">\n                            <i className=\"fas fa-plus\"></i>\n                        </button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n};\n\nInput = connect()(Input);\n\nexport default Input;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\n\n//const Table = ({times}) => {\nlet Table = ({times}) => {\n    let hoursFormatted = \"--\";\n    let minutesFormatted = \"--\";\n\n    if (times.length > 0) {\n        hoursFormatted = (times[times.length-1].total.hours+\"\").padStart(2, '0');\n        minutesFormatted = (times[times.length-1].total.minutes+\"\").padStart(2, '0');\n    }\n\n    return (\n        <div className=\"card border-left-primary shadow py-2\">\n            <div className=\"card-body\">\n                <div className=\"row no-gutters align-items-center\">\n                    <div className=\"col mr-2\">\n                        <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Total time</div>\n                        <div className=\"h3 mb-0 font-weight-bold text-gray-800\">{hoursFormatted}:{minutesFormatted}</div>\n                    </div>\n                    <div className=\"col-auto\">\n                        <i className=\"fas fa-stopwatch fa-2x text-gray-300\"></i>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nTable.propTypes = {\n    times: PropTypes.arrayOf(\n        PropTypes.shape({\n            hours: PropTypes.number.isRequired,\n            minutes: PropTypes.number.isRequired\n        }).isRequired\n    ).isRequired\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return state;\n}\n\nTable = connect(mapStateToProps)(Table);\n\nexport default Table;\n","import React from 'react';\n\nconst Footer = () => {\n    return (<footer className=\"sticky-footer bg-white\">\n                <div className=\"container my-auto\">\n                    <div className=\"copyright text-center my-auto\">\n                        <span>Copyright &copy; {(new Date()).getFullYear()}</span>\n                    </div>\n                </div>\n            </footer>);\n};\n\nexport default Footer;\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport timeApp from './reducers/index'\n\nimport Jumbotron from './components/Jumbotron';\nimport TimeTable from './components/TimeTable';\nimport Input from './components/Input';\nimport TotalCard from './components/TotalCard';\nimport Footer from './components/Footer';\n\nconst store = createStore(timeApp);\n\nconst App = () => (\n    <Provider store={store}>\n        <div id=\"content\">\n            <div className=\"container\" style={{maxWidth: \"800px\", paddingTop: \"30px\", paddingBottom: \"50px\"}}>\n                <Jumbotron title=\"Time Calculator\" subtitle=\"Easy time tracking for your logbook\" />\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <TimeTable />\n                    </div>\n                    <div className=\"col-sm-1\"></div>\n                    <div className=\"col-sm-5\">\n                        <TotalCard />\n                        <hr />\n                        <h4>Add time</h4>\n                        <Input />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n    </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sb-admin-2.css';\nimport './vendor/fontawesome-free/css/all.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}