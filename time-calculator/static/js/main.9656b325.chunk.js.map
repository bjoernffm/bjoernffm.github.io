{"version":3,"sources":["reducers/times.js","actions/actions.js","reducers/index.js","components/Jumbotron.js","components/TableRow.js","components/Table.js","components/TimeTable.js","components/Input.js","components/TotalCard.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","times","state","action","type","previousHours","previousMinutes","length","total","hours","minutes","payload","Math","floor","parseInt","index","newState","splice","sumHours","sumMinutes","map","item","combineReducers","Jumbotron","title","subtitle","className","TableRow","onClick","hoursFormatted","padStart","minutesFormatted","totalHoursFormatted","totalMinutesFormatted","align","style","marginTop","Table","onRemoveClick","onClearAllClick","width","cellSpacing","textAlign","padding","time","key","TimeTable","connect","ownProps","dispatch","removeTime","Input","props","hoursInput","React","createRef","minutesInput","onSubmit","bind","onKeyDownHours","onKeyDownMinutes","hourInput","minuteInput","this","current","focus","e","preventDefault","isNaN","value","addTime","setState","indexOf","substr","placeholder","ref","onKeyDown","Component","Footer","Date","getFullYear","store","createStore","timeApp","App","id","maxWidth","paddingTop","paddingBottom","TotalCard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9656b325.chunk.js","sourcesContent":["import {\r\n    ADD_TIME,\r\n    REMOVE_TIME,\r\n    CLEAR_TIMES\r\n} from '../actions/actions';\r\n\r\nconst initialState = [];\r\n\r\nfunction times(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case ADD_TIME:\r\n            let previousHours = 0;\r\n            let previousMinutes = 0;\r\n\r\n            if (state.length > 0) {\r\n                previousHours = state[state.length-1].total.hours;\r\n                previousMinutes = state[state.length-1].total.minutes;\r\n            }\r\n\r\n            let minutes = ((previousHours+action.payload.hours)*60) + (previousMinutes+action.payload.minutes);\r\n            let hours = Math.floor(minutes/60);\r\n            minutes = minutes % 60;\r\n\r\n            return [\r\n                ...state,\r\n                {\r\n                    hours: action.payload.hours,\r\n                    minutes: action.payload.minutes,\r\n                    total: {\r\n                        hours,\r\n                        minutes\r\n                    }\r\n                }\r\n            ];\r\n        case REMOVE_TIME:\r\n            if (state.length < 1 ||  typeof state[parseInt(action.payload.index)] === \"undefined\") {\r\n                return state;\r\n            }\r\n\r\n            let newState = [...state];\r\n            newState.splice(action.payload.index, 1);\r\n\r\n            if (parseInt(action.payload.index) === state.length-1) {\r\n                return newState;\r\n            }\r\n\r\n            let sumHours = 0;\r\n            let sumMinutes = 0;\r\n            newState = newState.map((item) => {\r\n                let minutes = ((sumHours+item.hours)*60) + (sumMinutes+item.minutes);\r\n                sumHours = Math.floor(minutes/60);\r\n                sumMinutes = minutes % 60;\r\n\r\n                return {\r\n                    hours: item.hours,\r\n                    minutes: item.minutes,\r\n                    total: {\r\n                        hours: sumHours,\r\n                        minutes: sumMinutes\r\n                    }\r\n                };\r\n            });\r\n\r\n            return newState;\r\n        case CLEAR_TIMES:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default times;","/*\r\n * action types\r\n */\r\n\r\nexport const ADD_TIME = 'ADD_TIME';\r\nexport const REMOVE_TIME = 'REMOVE_TIME';\r\nexport const CLEAR_TIMES = 'CLEAR_TIMES';\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function addTime(hours, minutes) {\r\n    return {\r\n        type: ADD_TIME,\r\n        payload: {\r\n            hours,\r\n            minutes\r\n        }\r\n    };\r\n}\r\n\r\nexport function removeTime(index) {\r\n    return {\r\n        type: REMOVE_TIME,\r\n        payload: {\r\n            index\r\n        }\r\n    };\r\n}\r\n\r\nexport function clearTimes() {\r\n    return {\r\n        type: CLEAR_TIMES\r\n    };\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport times from './times';\r\n\r\nexport default combineReducers({\r\n    times\r\n})","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Jumbotron = ({title, subtitle}) => {\r\n    return (<div className=\"jumbotron\">\r\n                <h1 className=\"display-4\">{title}</h1>\r\n                <p className=\"lead\">{subtitle}</p>\r\n            </div>);\r\n};\r\n\r\nJumbotron.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    subtitle: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TableRow = ({hours, minutes, total, onClick}) => {\r\n\r\n    let hoursFormatted = (hours+\"\").padStart(2, '0');\r\n    let minutesFormatted = (minutes+\"\").padStart(2, '0');\r\n\r\n    let totalHoursFormatted = (total.hours+\"\").padStart(2, '0');\r\n    let totalMinutesFormatted = (total.minutes+\"\").padStart(2, '0');\r\n\r\n    return (<tr>\r\n                <td>{hoursFormatted}:{minutesFormatted}</td>\r\n                <td>{totalHoursFormatted}:{totalMinutesFormatted}</td>\r\n                <td align=\"right\">\r\n                    <button className=\"btn btn-secondary btn-circle btn-sm\" style={{marginTop: \"-3px\"}} onClick={onClick}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>);\r\n};\r\n\r\nTableRow.propTypes = {\r\n    hours: PropTypes.number.isRequired,\r\n    minutes: PropTypes.number.isRequired\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport TableRow from './TableRow';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Table = ({onRemoveClick, onClearAllClick, times}) => {\r\n    return (\r\n        <div className=\"card shadow mb-4\">\r\n            <div className=\"card-header py-3\">\r\n                <h6 className=\"m-0 font-weight-bold text-primary\">Time list</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table\" width=\"100%\" cellSpacing=\"0\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Time</th>\r\n                                <th>Sum</th>\r\n                                <th style={{textAlign: \"right\"}}>\r\n                                    {\r\n                                        times.length > 0 &&\r\n                                        <button className=\"btn btn-link btn-sm\" style={{padding: \"0\"}} onClick={() => onClearAllClick()}>\r\n                                            clear all\r\n                                        </button>\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {times.map((time, index) => (\r\n                              <TableRow key={index} {...time} onClick={() => onRemoveClick(index) } />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    times: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            hours: PropTypes.number.isRequired,\r\n            minutes: PropTypes.number.isRequired\r\n        }).isRequired\r\n    ).isRequired,\r\n    onRemoveClick: PropTypes.func.isRequired,\r\n    onClearAllClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Table;\r\n","import { connect } from 'react-redux'\r\n//import { setVisibilityFilter } from '../actions'\r\nimport Table from '../components/Table';\r\nimport { removeTime, clearTimes } from '../actions/actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onRemoveClick: (index) => {\r\n            dispatch(removeTime(index));\r\n        },\r\n        onClearAllClick: () => {\r\n            dispatch(clearTimes());\r\n        }\r\n    }\r\n}\r\n\r\nconst TimeTable = connect(mapStateToProps, mapDispatchToProps)(Table);\r\n\r\nexport default TimeTable","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { addTime } from '../actions/actions';\r\n\r\nclass Input extends React.Component {\r\n    constructor(props) {\r\n        super(props); // makes this refer to this component\r\n\r\n        this.hoursInput = React.createRef();\r\n        this.minutesInput = React.createRef();\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onKeyDownHours = this.onKeyDownHours.bind(this);\r\n        this.onKeyDownMinutes = this.onKeyDownMinutes.bind(this);\r\n\r\n        this.state = {\r\n            hourInput: \"EMPTY\",\r\n            minuteInput: \"EMPTY\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.hoursInput.current.focus();\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let hours = 0;\r\n        let minutes = 0;\r\n\r\n        if (!isNaN(parseInt(this.hoursInput.current.value))) {\r\n            hours = parseInt(this.hoursInput.current.value);\r\n        }\r\n        if (!isNaN(parseInt(this.minutesInput.current.value))) {\r\n            minutes = parseInt(this.minutesInput.current.value);\r\n        }\r\n\r\n        if (hours !== 0 || minutes !== 0) {\r\n            this.props.dispatch(addTime(hours, minutes));\r\n        }\r\n        this.hoursInput.current.value = '';\r\n        this.minutesInput.current.value = '';\r\n        this.hoursInput.current.focus();\r\n        this.setState({ minuteInput: \"EMPTY\", hourInput: \"EMPTY\" });\r\n    }\r\n\r\n    onKeyDownHours(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.state.hourInput === \"EMPTY\") {\r\n            if ([\"Backspace\"].indexOf(e.key) !== -1 && this.hoursInput.current.value === \"0\") {\r\n                this.hoursInput.current.value = \"\";\r\n                this.setState({ hourInput: \"EMPTY\" });\r\n            } else if ([\"0\", \"Tab\", \"Enter\"].indexOf(e.key) !== -1) {\r\n                this.hoursInput.current.value = \"0\";\r\n                this.minutesInput.current.focus();\r\n                this.setState({ hourInput: \"EMPTY\" });\r\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"].indexOf(e.key) !== -1) {\r\n                this.hoursInput.current.value = e.key;\r\n                this.setState({ hourInput: \"FILLED\" });\r\n            }\r\n        } else if (this.state.hourInput === \"FILLED\") {\r\n            if ([\"Tab\", \"Enter\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.focus();\r\n            } else if ([\"Backspace\"].indexOf(e.key) !== -1) {\r\n                if (this.hoursInput.current.value.length > 1) {\r\n                    this.hoursInput.current.value = this.hoursInput.current.value.substr(0, this.hoursInput.current.value.length-1);\r\n                } else {\r\n                    this.hoursInput.current.value = \"\";\r\n                    this.setState({ hourInput: \"EMPTY\" });\r\n                }\r\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"].indexOf(e.key) !== -1) {\r\n                this.hoursInput.current.value += e.key;\r\n            }\r\n        }\r\n    }\r\n\r\n    onKeyDownMinutes(e) {\r\n        e.preventDefault();\r\n\r\n        if (this.state.minuteInput === \"EMPTY\") {\r\n            if ([\"Backspace\"].indexOf(e.key) !== -1 && this.hoursInput.current.value === \"0\") {\r\n                this.minutesInput.current.value = \"\";\r\n                this.setState({ minuteInput: \"EMPTY\" });\r\n            } else if ([\"0\", \"Enter\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.value = \"0\";\r\n                this.onSubmit(e);\r\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.value = e.key;\r\n                this.setState({ minuteInput: \"FILLED_FIRST\" });\r\n            } else if ([\"6\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.value = e.key;\r\n                this.onSubmit(e);\r\n            }\r\n        } else if (this.state.minuteInput === \"FILLED_FIRST\") {\r\n            if ([\"Enter\"].indexOf(e.key) !== -1) {\r\n                this.onSubmit(e);\r\n            } else if ([\"Backspace\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.value = \"\";\r\n                this.setState({ minuteInput: \"EMPTY\" });\r\n            } else if ([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"].indexOf(e.key) !== -1) {\r\n                this.minutesInput.current.value += e.key;\r\n                this.setState({ minuteInput: \"FILLED_SECOND\" });\r\n                this.onSubmit(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Hours\" ref={this.hoursInput} onKeyDown={this.onKeyDownHours} />\r\n                    </div>\r\n                    <div className=\"form-group col\">\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Minutes\" ref={this.minutesInput} onKeyDown={this.onKeyDownMinutes} />\r\n                    </div>\r\n                    <div className=\"form-group col-auto\">\r\n                        <button className=\"btn btn-success btn-circle btn-sm\" style={{marginTop: \"5px\"}} type=\"submit\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n};\r\n\r\nInput = connect()(Input);\r\n\r\nexport default Input;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\n\r\n//const Table = ({times}) => {\r\nlet Table = ({times}) => {\r\n    let hoursFormatted = \"--\";\r\n    let minutesFormatted = \"--\";\r\n\r\n    if (times.length > 0) {\r\n        hoursFormatted = (times[times.length-1].total.hours+\"\").padStart(2, '0');\r\n        minutesFormatted = (times[times.length-1].total.minutes+\"\").padStart(2, '0');\r\n    }\r\n\r\n    return (\r\n        <div className=\"card border-left-primary shadow py-2\">\r\n            <div className=\"card-body\">\r\n                <div className=\"row no-gutters align-items-center\">\r\n                    <div className=\"col mr-2\">\r\n                        <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">Total time</div>\r\n                        <div className=\"h3 mb-0 font-weight-bold text-gray-800\">{hoursFormatted}:{minutesFormatted}</div>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <i className=\"fas fa-stopwatch fa-2x text-gray-300\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTable.propTypes = {\r\n    times: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            hours: PropTypes.number.isRequired,\r\n            minutes: PropTypes.number.isRequired\r\n        }).isRequired\r\n    ).isRequired\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return state;\r\n}\r\n\r\nTable = connect(mapStateToProps)(Table);\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (<footer className=\"sticky-footer bg-white\">\r\n                <div className=\"container my-auto\">\r\n                    <div className=\"copyright text-center my-auto\">\r\n                        <span>Version 1.1.0 - Copyright &copy; {(new Date()).getFullYear()}</span>\r\n                    </div>\r\n                </div>\r\n            </footer>);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport timeApp from './reducers/index'\r\n\r\nimport Jumbotron from './components/Jumbotron';\r\nimport TimeTable from './components/TimeTable';\r\nimport Input from './components/Input';\r\nimport TotalCard from './components/TotalCard';\r\nimport Footer from './components/Footer';\r\n\r\nconst store = createStore(timeApp);\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <div id=\"content\">\r\n            <div className=\"container\" style={{maxWidth: \"800px\", paddingTop: \"30px\", paddingBottom: \"50px\"}}>\r\n                <Jumbotron title=\"Time Calculator\" subtitle=\"Easy time tracking for your logbook\" />\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <TimeTable />\r\n                    </div>\r\n                    <div className=\"col-sm-1\"></div>\r\n                    <div className=\"col-sm-5\">\r\n                        <TotalCard />\r\n                        <hr />\r\n                        <h4>Add time</h4>\r\n                        <Input />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n    </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './sb-admin-2.css';\r\nimport './vendor/fontawesome-free/css/all.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}